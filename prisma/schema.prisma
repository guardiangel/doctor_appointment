// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  category  String
  content   String   @db.Text
  author    String
  image     String
  snippet   String   @db.Text
}

model User {
  id         String      @id @default(uuid())
  userId     String      @unique
  password   String
  userName   String
  address    String
  phone      String
  email      String
  type       String
  gender     String
  age        Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  treatments Treatment[]
}

model Treatment {
  id            String      @id @default(uuid())
  userId        String
  user          User        @relation(fields: [userId], references: [userId])
  appointmentId Int         @unique
  appoinment    Appointment @relation(fields: [appointmentId], references: [appointmentId])
  dise          String
  treatment     String
  note          String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([userId])
}

model Category {
  id            String        @id @default(uuid())
  categoryValue String        @unique
  categoryName  String        @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  Appointment   Appointment[]
}

model Appointment {
  id              String     @id @default(uuid())
  appointmentId   Int        @unique
  doctorId        String
  patientId       String
  categoryId      String
  category        Category   @relation(fields: [categoryId], references: [id])
  timeSlotValue   String
  appointmentDate String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  treatment       Treatment?

  @@index([categoryId])
}

model Timeslot {
  id            String   @id @default(uuid())
  timeSlotOrder Int      @unique
  timeSlotValue String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
