// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  category  String
  content   String   @db.Text
  author    String
  image     String
  snippet   String   @db.Text
}

model User {
  id           String        @id @default(uuid())
  userId       String        @unique
  password     String
  userName     String
  address      String
  phone        String
  email        String
  type         String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  treatments   Treatment[]
  appointments Appointment[]
}

model Treatment {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [userId])
  dise      String
  treatment String
  note      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Category {
  id            String        @id @default(uuid())
  categoryValue String        @unique
  categoryName  String        @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  appointments  Appointment[]
}

model Appointment {
  id         String   @id @default(uuid())
  userId     String
  user       User     @relation(fields: [userId], references: [userId])
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  timeSlotId String
  timeSlot   Timeslot @relation(fields: [timeSlotId], references: [id])
  date       DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Timeslot {
  id            String        @id @default(uuid())
  timeSlotValue String        @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  appointments  Appointment[]
}
